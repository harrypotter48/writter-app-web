{"version":3,"sources":["config/history.js","shared/error/error-boundary.js","shared/error/error-boundary-route.js","config/routes-constants.js","shared/firebase/db-constants.js","shared/firebase/firebase-manager.js","shared/context/auth-manager.js","shared/context/index.js","shared/session/withAuthorization.js","modules/general/home/index.js","shared/error/page-not-found.js","shared/session/auth-data.js","modules/general/login/index.js","shared/util/link-utils.js","modules/layouts/loading/index.js","modules/admin/company-management/company-management.js","modules/admin/company-management/company-management-form.js","modules/admin/company-management/company-management-create.js","modules/admin/company-management/company-management-view.js","shared/firebase/firebase-context.js","modules/admin/company-management/company-management-edit.js","modules/admin/company-management/company-management-delete.js","modules/admin/company-management/index.js","modules/admin/product-line-management/product-line-management.js","modules/admin/product-line-management/product-line-management-form.js","modules/admin/product-line-management/product-line-management-create.js","modules/admin/product-line-management/product-line-management-view.js","modules/admin/product-line-management/product-line-management-edit.js","modules/admin/product-line-management/product-line-management-delete.js","modules/admin/product-line-management/index.js","modules/admin/brand-management/brand-management.js","modules/admin/brand-management/brand-management-form.js","modules/admin/brand-management/brand-management-create.js","modules/admin/brand-management/brand-management-view.js","modules/admin/brand-management/brand-management-edit.js","modules/admin/brand-management/brand-management-delete.js","modules/admin/brand-management/index.js","modules/admin/product/product-management.js","modules/layouts/autocomplete/creatable.js","modules/layouts/autocomplete/select.js","modules/layouts/autocomplete/index.js","modules/admin/product/product-management-form.js","modules/admin/product/product-management-create.js","modules/admin/product/product-management-view.js","modules/admin/product/product-management-edit.js","modules/admin/product/product-management-delete.js","modules/admin/product/index.js","routes.js","modules/layouts/header/index.js","App.js","registerServiceWorker.js","index.js","logo.svg"],"names":["createBrowserHistory","ErrorBoundary","state","error","undefined","errorInfo","this","setState","errorDetails","className","toString","componentStack","props","children","React","Component","ErrorBoundaryRoute","component","rest","Error","path","render","ROUTES_CONSTANTS","HOME","AUTH","LOGIN","COMPANY","index","create","view","uid","edit","delete","PRODUCT_LINE","BRAND","PRODUCT","DB_CONSTANTS","getAll","getOne","fbConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","loginWithGoogle","auth","signInWithPopup","googleProvider","logout","signOut","users","db","ref","user","companies","company","productLines","productLine","brands","brand","products","product","app","initializeApp","database","GoogleAuthProvider","AuthManager","setUser","isAuthenticated","SettingContext","createContext","displayName","SettingProvider","firebase","Provider","value","withSetting","Consumer","context","withAuthorization","condition","WithAuthorization","onAuthStateChanged","history","push","HomePage","authUser","PageNotFound","Alert","variant","isAdmin","email","ROLES","ADMIN","WRITTER","LoginPage","then","socialAuthUser","userTemp","username","roles","set","catch","console","log","Container","Row","Card","border","style","width","Img","src","logo","Body","Title","Button","onClick","handleLink","e","preventDefault","goBack","Loading","Spinner","animation","role","BrandManagement","loading","items","getItems","on","snapshot","itemsObject","val","itemsList","Object","keys","map","key","off","Col","Table","striped","bordered","hover","length","item","i","name","description","ButtonGroup","aria-label","CompanyManagementForm","wordCount","changeHandler","event","targetName","target","targetValue","texto","replace","split","handleSubmit","saveEntity","title","Form","noValidate","onSubmit","validated","htmlFor","type","onChange","CompanyManagementCreate","CompanyManagementView","getItem","match","params","id","once","ListGroup","Item","FirebaseContext","withFirebase","CompanyManagementEdit","CompanyManagementDelete","remove","Modal","show","onHide","Header","closeButton","Footer","CompanyRoutes","url","CompanyManagement","ProductLineManagement","ProductLineManagementForm","ProductLineManagementCreate","createdBy","ProductLineManagementView","ProductLineManagementEdit","ProductLineManagementDelete","ProductLinesRoutes","BrandManagementForm","BrandManagementCreate","BrandManagementView","BrandManagementEdit","BrandManagementDelete","BrandRoutes","code","shortDescription","largeDescription","productLineName","brandName","CreatableWidget","isLoading","options","handleChange","newValue","actionMeta","isClearable","isMulti","onCreateOption","SelectWidget","nextProps","nextState","AutoComplete","isCreatable","selectedOptions","checkIfSelectedOptionsChange","nextSelected","iquals","j","stateSelected","defaultValue","prepareOptions","option","label","defaultLabel","selectedOption","handleCreate","inputValue","ProductManagementForm","productLineUID","brandUID","changeProductLineHandler","changeBrandHandler","md","getProductLines","Promise","resolve","reject","getBrands","getProduct","ProductRoutes","ProductManagementEdit","ProductManagementCreate","ProductManagementView","ProductManagement","ProductManagementDelete","Routes","exact","Home","homeRoute","companiesRoute","productLinesRoute","brandRoute","productRoute","Navbar","bg","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","App","componentDidMount","forceUpdate","logoutWithGoogle","fluid","paddingTop","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.0bfca568.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\n\nexport default createBrowserHistory()\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component{\n   state = { error: undefined, errorInfo: undefined };\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo\n    });\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    if (errorInfo) {\n      const errorDetails =\n         ( \n\t\t\t\t\t<details className=\"preserve-space\"> \n\t\t\t\t\t\t{error && error.toString()} \n\t\t\t\t\t\t<br /> \n\t\t\t\t\t\t{errorInfo.componentStack}\n\t\t\t\t\t</details>\n        )\n      return (\n        <div>\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\n          {errorDetails}\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport ErrorBoundary from './error-boundary';\n\n\nexport const ErrorBoundaryRoute = ({ component: Component, ...rest }) => {\n  const encloseInErrorBoundary = props => (\n    <ErrorBoundary>\n      <Component {...props} />\n    </ErrorBoundary>\n  );\n\n  if (!Component) throw new Error(`A component needs to be specified for path ${(rest).path}`);\n\n  return <Route {...rest} render={encloseInErrorBoundary} />;\n};\n\nexport default ErrorBoundaryRoute;\n","export const ROUTES_CONSTANTS = {\n  HOME: \"/\",\n  AUTH: {\n    LOGIN: \"/login\"\n  },\n  COMPANY: {\n    index: () => '/company',\n    create: () => '/company/create',\n    view: uid => `/company/view/${uid}`,\n    edit: uid => `/company/edit/${uid}`,\n    delete: uid => `/company/delete/${uid}`,\n  },\n  PRODUCT_LINE: {\n    index: () => '/product_line',\n    create: () => '/product_line/create',\n    view: uid => `/product_line/view/${uid}`,\n    edit: uid => `/product_line/edit/${uid}`,\n    delete: uid => `/product_line/delete/${uid}`,\n  },\n  BRAND: {\n    index: () => '/brand',\n    create: () => '/brand/create',\n    view: uid => `/brand/view/${uid}`,\n    edit: uid => `/brand/edit/${uid}`,\n    delete: uid => `/brand/delete/${uid}`,\n  },\n  PRODUCT: {\n    index: () => '/product',\n    create: () => '/product/create',\n    view: uid => `/product/view/${uid}`,\n    edit: uid => `/product/edit/${uid}`,\n    delete: uid => `/product/delete/${uid}`,\n  } \n};\n","\nexport const DB_CONSTANTS = {\n\tCOMPANY : {\n\t\tgetAll: () => 'companies',\n\t\tgetOne: uid => `companies/${uid}`\n\t},\n\tPRODUCT_LINE : {\n\t\tgetAll: () => 'product_lines',\n\t\tgetOne: uid => `product_lines/${uid}`\n\t},\n\tBRAND : {\n\t\tgetAll: () => 'brands',\n\t\tgetOne: uid => `brands/${uid}`\n\t},\n\tPRODUCT : {\n\t\tgetAll: () => 'products',\n\t\tgetOne: uid => `products/${uid}`\n\t},\n\tUSER : {\n\t\tgetAll: () => 'users',\n\t\tgetOne: uid => `users/${uid}`\n\t}\n}","import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport { DB_CONSTANTS } from \"./db-constants\";\n\nconst fbConfig = {\n  apiKey: \"AIzaSyDInxcKjFND6CPzzrqfpDUJwfBgFHAPJJU\",\n  authDomain: \"writter-app-management.firebaseapp.com\",\n  databaseURL: \"https://writter-app-management.firebaseio.com\",\n  projectId: \"writter-app-management\",\n  storageBucket: \"writter-app-management.appspot.com\",\n  messagingSenderId: \"904791426685\",\n  appId: \"1:904791426685:web:45c2edf19ecf22bca01314\",\n  measurementId: \"G-WR58CXQRLF\"\n};\nclass Firebase {\n  constructor() {\n    app.initializeApp(fbConfig);\n\n    this.auth = app.auth();\n    this.db = app.database();\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n  }\n\n  // *** Auth API ***\n  loginWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n  logout = () => this.auth.signOut();\n\n  // *** User API ***\n  users = () => this.db.ref(DB_CONSTANTS.USER.getAll());\n  user = uid => this.db.ref(DB_CONSTANTS.USER.getOne(uid));\n\n  // *** Company API ***\n  companies = () => this.db.ref(DB_CONSTANTS.COMPANY.getAll());\n  company = uid => this.db.ref(DB_CONSTANTS.COMPANY.getOne(uid));\n\n  // *** Product Lines API ***\n  productLines = () => this.db.ref(DB_CONSTANTS.PRODUCT_LINE.getAll());\n  productLine = uid => this.db.ref(DB_CONSTANTS.PRODUCT_LINE.getOne(uid));\n\n  // *** Brand API ***\n  brands = () => this.db.ref(DB_CONSTANTS.BRAND.getAll());\n  brand = uid => this.db.ref(DB_CONSTANTS.BRAND.getOne(uid));\n\n  // *** Product API ***\n  products = () => this.db.ref(DB_CONSTANTS.PRODUCT.getAll());\n  product = uid => this.db.ref(DB_CONSTANTS.PRODUCT.getOne(uid));\n}\nexport default Firebase;\n","class AuthManager {\n  constructor() {\n    this.user = null;\n    this.isAuthenticated = false;\n  }\n\n  setUser = user => {\n    if (user !== null) {\n      this.isAuthenticated = true;\n    } else {\n      this.isAuthenticated = false;\n    }\n    this.user = user;\n  };\n}\n\nexport default AuthManager;\n","import React, { Component } from \"react\";\nimport Firebase from \"../firebase/firebase-manager\";\nimport AuthManager from \"./auth-manager\";\n\n// Crear el context\nconst SettingContext = React.createContext();\nSettingContext.displayName = 'SettingContext';\nexport { SettingContext };\n\nclass SettingProvider extends Component {\n  state = {\n\t\tfirebase: new Firebase(),\n\t\tauth: new AuthManager(),\n  };\n\n  render() {\n    return (\n      <SettingContext.Provider\n        value={{\n\t\t\t\t\tfirebase: this.state.firebase,\n\t\t\t\t\tauth: this.state.auth\n        }}\n      >\n        {this.props.children}\n      </SettingContext.Provider>\n    );\n  }\n}\n\nexport const withSetting = Component => props => (\n  <SettingContext.Consumer>\n    {context => <Component {...props} context={context} />}\n  </SettingContext.Consumer>\n);\n\nexport default SettingProvider;\n","import React from \"react\";\nimport history from \"../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../config/routes-constants\";\nimport { withSetting } from \"../context\";\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.props.context.firebase.auth.onAuthStateChanged(function(user) {\n        if (user === null || !condition(user)) {\n          history.push(ROUTES_CONSTANTS.AUTH.LOGIN);\n        }\n      });\n    }\n\n    render() {\n      // if (this.props.context.auth.user === null) return null;\n      return <Component {...this.props} />;\n    }\n  }\n  return withSetting(WithAuthorization);\n};\nexport default withAuthorization;\n","import React, { Component } from 'react'\nimport withAuthorization from '../../../shared/session/withAuthorization';\n\nclass HomePage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tDesde Homee!!!\n\t\t\t</div>\n\t\t)\n\t}\n}\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(HomePage)\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\n\nclass PageNotFound extends React.Component {\n  render() {\n    return (\n      <div>\n        <Alert variant=\"danger\">\n          The page does not exist.\n        </Alert>\n      </div>\n    );\n  }\n}\n\nexport default PageNotFound;","\nexport const isAdmin = email => {\n\tif( email && email === 'cabrerarobles@gmail.com') {\n\t\treturn true;\n\t}\n}\n\nexport const ROLES = {\n\tADMIN: 'admin',\n\tWRITTER: 'writter'\n}","import React, { Component } from \"react\";\nimport { Button, Card, Container, Row } from \"react-bootstrap\";\n\nimport logo from \"../../../logo.svg\";\nimport { isAdmin, ROLES } from \"../../../shared/session/auth-data\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass LoginPage extends Component {\n  loginWithGoogle = () => {\n    this.props.context.firebase\n      .loginWithGoogle()\n      .then(socialAuthUser => {\n        const userTemp = {\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: isAdmin(socialAuthUser.user.email)\n            ? ROLES.ADMIN\n            : ROLES.WRITTER\n        };\n        this.props.context.auth.setUser(userTemp);\n        return this.props.context.firebase\n          .user(socialAuthUser.user.uid)\n          .set( userTemp );\n      })\n      .then(() => {\n        history.push(ROUTES_CONSTANTS.HOME);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Card border=\"default\" style={{ width: \"18rem\" }}>\n            <Card.Img variant=\"top\" src={logo} />\n            <Card.Body className=\"justify-content-md-center\">\n              <Card.Title>Autenticacion</Card.Title>\n              <Button variant=\"danger\" onClick={this.loginWithGoogle}>\n                Login With Google\n              </Button>\n            </Card.Body>\n          </Card>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default withSetting(LoginPage);\n","import history from \"../../config/history\";\n\n/**\n * Funcion para cambiar de ruta.\n * @param {String} path Ruta\n */\nexport const handleLink = (e, path) => {\n\te.preventDefault();\n\thistory.push(path);\n}\n\nexport const goBack = e => {\n\tif(e) e.preventDefault();\n\thistory.goBack();\n}","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nexport default function Loading() {\n  return (\n    <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  );\n}\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Table,\n  Button,\n  Row,\n  Col,\n  ButtonGroup\n} from \"react-bootstrap\";\nimport { handleLink } from \"../../../shared/util/link-utils\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport Loading from \"../../layouts/loading\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass BrandManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      items: {}\n    };\n\n    this.getItems = this.props.context.firebase.companies;\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    this.getItems().on(\"value\", snapshot => {\n      const itemsObject = snapshot.val();\n      const itemsList = itemsObject\n        ? Object.keys(itemsObject).map(key => ({\n            ...itemsObject[key],\n            uid: key\n          }))\n        : [];\n      this.setState({\n        items: itemsList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.getItems().off();\n  }\n\n  render() {\n    const { items, loading } = this.state;\n    return (\n      <Container>\n        <h2>Companias</h2>\n        {loading && <Loading />}\n\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              onClick={e => handleLink(e, ROUTES_CONSTANTS.COMPANY.create())}\n            >\n              Crear\n            </Button>\n          </Col>\n        </Row>\n\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Description</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.length > 0 &&\n              items.map((item, i) => (\n                <tr key={item.uid}>\n                  <td>{i + 1}</td>\n                  <td>{item.name}</td>\n                  <td>{item.description}</td>\n                  <td className=\"row-table-actions text-center\">\n                    <ButtonGroup aria-label=\"Basic example\">\n                      <Button\n                        variant=\"success\"\n                        onClick={e =>\n                          handleLink(e, ROUTES_CONSTANTS.COMPANY.view(item.uid))\n                        }\n                      >\n                        View\n                      </Button>\n                      <Button\n                        variant=\"warning\"\n                        onClick={e =>\n                          handleLink(e, ROUTES_CONSTANTS.COMPANY.edit(item.uid))\n                        }\n                      >\n                        Edit\n                      </Button>\n                      <Button\n                        variant=\"danger\"\n                        onClick={e =>\n                          handleLink(\n                            e,\n                            ROUTES_CONSTANTS.COMPANY.delete(item.uid)\n                          )\n                        }\n                      >\n                        Delete\n                      </Button>\n                    </ButtonGroup>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nexport default withSetting(BrandManagement);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Container, Button } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\n\nexport default class CompanyManagementForm extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    saveEntity: PropTypes.func.isRequired,\n    item: PropTypes.object\n  };\n\n  state = {\n    item: {\n      name: \"\",\n      description: \"\"\n    },\n    wordCount: 0\n  };\n\n  componentDidMount() {\n    const { item } = this.props;\n    if (item) {\n      this.setState({ item });\n    }\n  }\n\n  changeHandler = event => {\n    let targetName = event.target.name;\n    let targetValue = event.target.value;\n    let wordCount = this.state.wordCount;\n\n    if (targetName === \"description\") {\n      let texto = targetValue;\n      let primerBlanco = /^ /;\n      let ultimoBlanco = / $/;\n      let variosBlancos = /[ ]+/g;\n      texto = texto.replace(variosBlancos, \" \");\n      texto = texto.replace(primerBlanco, \"\");\n      texto = texto.replace(ultimoBlanco, \"\");\n      wordCount = texto.split(\" \").length;\n    }\n    this.setState({\n      ...this.state,\n      item: {\n        ...this.state.item,\n        [targetName]: targetValue\n      },\n      wordCount\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // event.target.className = \"needs-validation\";\n    this.props.saveEntity(this.state.item);\n  };\n\n  render() {\n    return (\n      <Container>\n        <h2>{this.props.title}</h2>\n        <Button onClick={e => goBack(e)}>Back</Button>\n        <Form noValidate onSubmit={this.handleSubmit} validated={false}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Nombre</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"name\"\n              value={this.state.item.name}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Descripcion</label>\n            <textarea\n              className=\"form-control\"\n              name=\"description\"\n              value={this.state.item.description}\n              onChange={this.changeHandler}\n            />\n            <small className=\"form-text text-muted\">\n              Palabras: {this.state.wordCount}\n            </small>\n          </div>\n\n          <Button type=\"submit\" variant=\"info\">\n            Save\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport CompanyManagementForm from \"./company-management-form\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass CompanyManagementCreate extends Component {\n  saveEntity = item => {\n    const { firebase } = this.props.context;\n\n    // Get a key for a new Post.\n    var uid = firebase.companies().push().key;\n\n    firebase.company(uid).set(item, error => {\n      if (error) {\n        console.log(error);\n      } else {\n        history.push(ROUTES_CONSTANTS.COMPANY.index());\n      }\n    });\n  };\n\n  render() {\n    return (\n      <CompanyManagementForm title={\"Crear Compania\"} saveEntity={this.saveEntity} />\n    );\n  }\n}\n\nexport default withSetting(CompanyManagementCreate);\n","import React, { Component } from \"react\";\nimport { Container, ListGroup, Button } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\nimport Loading from \"../../layouts/loading\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass CompanyManagementView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      item: null\n    };\n\n    this.getItem = this.props.context.firebase.company;\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    let uid = this.props.match.params.id;\n    this.getItem(uid)\n      .once(\"value\")\n      .then(snapshot => {\n        const item = snapshot.val();\n        this.setState({\n          item,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { item, loading } = this.state;\n    return (\n      <Container>\n        <h2>Ver Compania</h2>\n        <Button onClick={e => goBack(e)}>Atras</Button>\n        {loading && <Loading />}\n        <ListGroup>\n          <ListGroup.Item className=\"d-flex justify-content-between\">\n            <span>\n              <strong>Nombre:</strong>\n            </span>\n            {item && item.name}\n          </ListGroup.Item>\n          <ListGroup.Item className=\"d-flex justify-content-between\">\n            <span>\n              <strong>Descripcion:</strong>\n            </span>\n            {item && item.description}\n          </ListGroup.Item>\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\nexport default withSetting(CompanyManagementView);\n","import React from \"react\";\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import React, { Component } from \"react\";\nimport { withFirebase } from \"../../../shared/firebase\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport CompanyManagementForm from \"./company-management-form\";\nimport Loading from \"../../layouts/loading\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass CompanyManagementEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      item: null\n    };\n\n    this.getItem = this.props.context.firebase.company;\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    let uid = this.props.match.params.id;\n    this.getItem(uid)\n      .once(\"value\")\n      .then(snapshot => {\n        const item = snapshot.val();\n        this.setState({\n          item,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  saveEntity = item => {\n    const { firebase } = this.props.context;\n\n    let uid = this.props.match.params.id;\n\n    firebase.company(uid).set(item, error => {\n      if (error) {\n        console.log(error);\n      } else {\n        history.push(ROUTES_CONSTANTS.COMPANY.index());\n      }\n    });\n  };\n\n  render() {\n    return this.state.loading ? (\n      <Loading />\n    ) : (\n      <CompanyManagementForm\n        title={\"Actualizar compania\"}\n        saveEntity={this.saveEntity}\n        item={this.state.item}\n      />\n    );\n  }\n}\n\nexport default withSetting(CompanyManagementEdit);\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass CompanyManagementDelete extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    const { firebase } = this.props.context;\n\n    let uid = this.props.match.params.id;\n\n    firebase.company(uid).remove(error => {\n      if (error) {\n        console.log(error);\n      } else {\n        console.log(\"eliminado correctamente!!!\");\n        history.push(ROUTES_CONSTANTS.COMPANY.index());\n      }\n    });\n  };\n  render() {\n    return (\n      <Modal show={true} onHide={e => goBack(e)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Eliminar!!!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Estas seguro que deseas eliminar este elemento?{\" \"}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\n            Cancelar\n          </Button>\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\n            Eliminar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default withSetting(CompanyManagementDelete);\n","import React from 'react'\nimport { Switch  } from 'react-router-dom';\nimport ErrorBoundaryRoute from '../../../shared/error/error-boundary-route';\nimport CompanyManagement from './company-management';\nimport CompanyManagementCreate from \"./company-management-create\";\nimport CompanyManagementView from \"./company-management-view\";\nimport CompanyManagementEdit from \"./company-management-edit\";\nimport CompanyManagementDelete from \"./company-management-delete\";\n\nexport default function CompanyRoutes({match}) {\n\treturn (\n\t\t<>\n\t\t\t<Switch>\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/edit/:id`} component={CompanyManagementEdit} />\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/create`} component={CompanyManagementCreate} />\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/view/:id`} component={CompanyManagementView} />\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}`} component={CompanyManagement} />\n\t\t\t</Switch>\n\t\t\t<ErrorBoundaryRoute path={`${match.url}/delete/:id`} component={CompanyManagementDelete} />\n\t\t</>\n\t)\n}\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Table,\n  Button,\n  Row,\n  Col,\n  ButtonGroup\n} from \"react-bootstrap\";\nimport { handleLink } from \"../../../shared/util/link-utils\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport Loading from \"../../layouts/loading\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass ProductLineManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      items: {}\n    };\n\n    this.getItems = this.props.context.firebase.productLines;\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    this.getItems().on(\"value\", snapshot => {\n      const itemsObject = snapshot.val();\n      const itemsList = itemsObject\n        ? Object.keys(itemsObject).map(key => ({\n            ...itemsObject[key],\n            uid: key\n          }))\n        : [];\n      this.setState({\n        items: itemsList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.getItems().off();\n  }\n\n  render() {\n    const { items, loading } = this.state;\n    return (\n      <Container>\n        <h2>Lineas de productos</h2>\n        {loading && <Loading />}\n\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              onClick={e =>\n                handleLink(e, ROUTES_CONSTANTS.PRODUCT_LINE.create())\n              }\n            >\n              Crear\n            </Button>\n          </Col>\n        </Row>\n\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Description</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.length > 0 &&\n              items.map((item, i) => (\n                <tr key={item.uid}>\n                  <td>{i + 1}</td>\n                  <td>{item.name}</td>\n                  <td>{item.description}</td>\n                  <td className=\"row-table-actions text-center\">\n                    <ButtonGroup aria-label=\"Basic example\">\n                      <Button\n                        variant=\"success\"\n                        onClick={e =>\n                          handleLink(\n                            e,\n                            ROUTES_CONSTANTS.PRODUCT_LINE.view(item.uid)\n                          )\n                        }\n                      >\n                        View\n                      </Button>\n                      <Button\n                        variant=\"warning\"\n                        onClick={e =>\n                          handleLink(\n                            e,\n                            ROUTES_CONSTANTS.PRODUCT_LINE.edit(item.uid)\n                          )\n                        }\n                      >\n                        Edit\n                      </Button>\n                      <Button\n                        variant=\"danger\"\n                        onClick={e =>\n                          handleLink(\n                            e,\n                            ROUTES_CONSTANTS.PRODUCT_LINE.delete(item.uid)\n                          )\n                        }\n                      >\n                        Delete\n                      </Button>\n                    </ButtonGroup>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nexport default withSetting(ProductLineManagement);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Col, Container, Button } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\n\nexport default class ProductLineManagementForm extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    saveEntity: PropTypes.func.isRequired,\n    item: PropTypes.object\n  };\n\n  state = {\n    item: {\n      name: \"\",\n      description: \"\"\n    },\n    wordCount: 0\n  };\n\n  componentDidMount() {\n    const { item } = this.props;\n    if (item) {\n      this.setState({ item });\n    }\n  }\n\n  changeHandler = event => {\n    const state = { ...this.state };\n    let targetName = event.target.name;\n    let targetValue = event.target.value;\n    let wordCount = this.state.wordCount;\n    \n    if (targetName === \"description\") {\n      \n      let texto = targetValue;\n      let primerBlanco = /^ /;\n      let ultimoBlanco = / $/;\n      let variosBlancos = /[ ]+/g;\n      texto = texto.replace(variosBlancos, \" \");\n      texto = texto.replace(primerBlanco, \"\");\n      texto = texto.replace(ultimoBlanco, \"\");\n      wordCount = texto.split(\" \").length;\n      console.log(wordCount)\n    }\n    this.setState({\n      ...this.state,\n      item: {\n        ...this.state.item,\n        [targetName]: targetValue\n      },\n      wordCount\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // event.target.className = \"needs-validation\";\n    this.props.saveEntity(this.state.item);\n  };\n\n  render() {\n    return (\n      <Container>\n        <h2>{this.props.title}</h2>\n        <Button onClick={e => goBack(e)}>Back</Button>\n        <Form noValidate onSubmit={this.handleSubmit} validated={false}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Nombre</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"name\"\n              value={this.state.item.name}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Descripcion</label>\n            <textarea\n              className=\"form-control\"\n              name=\"description\"\n              value={this.state.item.description}\n              onChange={this.changeHandler}\n            />\n            <small className=\"form-text text-muted\">\n              Palabras: {this.state.wordCount}\n            </small>\n          </div>\n\n          <Button type=\"submit\" variant=\"info\">\n            Save\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProductLineManagementForm from \"./product-line-management-form\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass ProductLineManagementCreate extends Component {\n  saveEntity = item => {\n    const { firebase } = this.props.context;\n\n    // Get a key for a new Post.\n    var uid = firebase.productLines().push().key;\n\n    item.createdBy = this.props.context.auth.user.uid;\n\n    firebase.productLine(uid).set(item, error => {\n      if (error) {\n        console.log(error);\n      } else {\n        history.push(ROUTES_CONSTANTS.PRODUCT_LINE.index());\n      }\n    });\n  };\n\n  render() {\n    return (\n      <ProductLineManagementForm\n        title={\"Crear linea de productos\"}\n        saveEntity={this.saveEntity}\n      />\n    );\n  }\n}\n\nexport default withSetting(ProductLineManagementCreate);\n","import React, { Component } from \"react\";\nimport { Container, ListGroup, Button } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\nimport Loading from \"../../layouts/loading\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass ProductLineManagementView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      item: null\n    };\n\n    this.getItem = this.props.context.firebase.productLine;\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    let uid = this.props.match.params.id;\n    this.getItem(uid)\n      .once(\"value\")\n      .then(snapshot => {\n        const item = snapshot.val();\n        this.setState({\n          item,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { item, loading } = this.state;\n    return (\n      <Container>\n        <h2>Ver linea de productos</h2>\n        <Button onClick={e => goBack(e)}>Back</Button>\n        {loading && <Loading />}\n        <ListGroup>\n          <ListGroup.Item className=\"d-flex justify-content-between\">\n            <span>\n              <strong>Nombre:</strong>\n            </span>\n            {item && item.name}\n          </ListGroup.Item>\n          <ListGroup.Item className=\"d-flex justify-content-between\">\n            <span>\n              <strong>Descripcion:</strong>\n            </span>\n            {item && item.description}\n          </ListGroup.Item>\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\nexport default withSetting(ProductLineManagementView);\n","import React, { Component } from \"react\";\nimport ProductLineManagementForm from \"./product-line-management-form\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport Loading from \"../../layouts/loading\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass ProductLineManagementEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      item: null\n    };\n\n    this.getItem = this.props.context.firebase.productLine;\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    let uid = this.props.match.params.id;\n    this.getItem(uid)\n      .once(\"value\")\n      .then(snapshot => {\n        const item = snapshot.val();\n        this.setState({\n          item,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  saveEntity = item => {\n\t\tconst { firebase } = this.props.context;\n\t\t\n    let uid = this.props.match.params.id;\n\n    firebase.productLine(uid).set(item, error => {\n      if (error) {\n        console.log(error);\n      } else {\n        history.push(ROUTES_CONSTANTS.PRODUCT_LINE.index());\n      }\n    });\n  };\n\n  render() {\n    return this.state.loading ? (\n      <Loading />\n    ) : (\n      <ProductLineManagementForm\n        title={\"Actualizar linea de productos\"}\n        saveEntity={this.saveEntity}\n        item={this.state.item}\n      />\n    );\n  }\n}\n\nexport default withSetting(ProductLineManagementEdit);\n","import React, { Component } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { goBack } from '../../../shared/util/link-utils'\nimport history from '../../../config/history';\nimport { ROUTES_CONSTANTS } from '../../../config/routes-constants';\nimport { withSetting } from '../../../shared/context';\n\nclass ProductLineManagementDelete extends Component {\n\thandleSubmit = e => {\n    e.preventDefault();\n    const { firebase } = this.props.context;\n\t\t\n    let uid = this.props.match.params.id;\n\n    firebase.productLine(uid).remove(error => {\n      if (error) {\n        console.log(error);\n      } else {\n\t\t\t\tconsole.log('eliminado correctamente!!!')\n        history.push(ROUTES_CONSTANTS.PRODUCT_LINE.index());\n      }\n    });\n  }\n\trender() {\n\t\treturn (\n\t\t\t<Modal show={true} onHide={e => goBack(e)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Estas seguro que deseas eliminar este elemento? </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\n            Cancelar\n          </Button>\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\n            Eliminar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\t\t)\n\t}\n}\n\nexport default withSetting( ProductLineManagementDelete)","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport ErrorBoundaryRoute from \"../../../shared/error/error-boundary-route\";\nimport ProductLineManagement from \"./product-line-management\";\nimport ProductLineManagementCreate from \"./product-line-management-create\";\nimport ProductLineManagementView from \"./product-line-management-view\";\nimport ProductLineManagementEdit from \"./product-line-management-edit\";\nimport ProductLineManagementDelete from \"./product-line-management-delete\";\n\nexport default function ProductLinesRoutes({ match }) {\n  return (\n    <>\n      <Switch>\n        <ErrorBoundaryRoute\n          path={`${match.url}/edit/:id`}\n          component={ProductLineManagementEdit}\n        />\n        <ErrorBoundaryRoute\n          path={`${match.url}/create`}\n          component={ProductLineManagementCreate}\n        />\n        <ErrorBoundaryRoute\n          path={`${match.url}/view/:id`}\n          component={ProductLineManagementView}\n        />\n        <ErrorBoundaryRoute\n          path={`${match.url}`}\n          component={ProductLineManagement}\n        />\n      </Switch>\n      <ErrorBoundaryRoute\n        path={`${match.url}/delete/:id`}\n        component={ProductLineManagementDelete}\n      />\n    </>\n  );\n}\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Table,\n  Button,\n  Row,\n  Col,\n  ButtonGroup\n} from \"react-bootstrap\";\nimport { handleLink } from \"../../../shared/util/link-utils\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport Loading from \"../../layouts/loading\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass BrandManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      items: {}\n    };\n\n    this.getItems = this.props.context.firebase.brands;\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    this.getItems().on(\"value\", snapshot => {\n      const itemsObject = snapshot.val();\n      const itemsList = itemsObject\n        ? Object.keys(itemsObject).map(key => ({\n            ...itemsObject[key],\n            uid: key\n          }))\n        : [];\n      this.setState({\n        items: itemsList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.getItems().off();\n  }\n\n  render() {\n    const { items, loading } = this.state;\n    return (\n      <Container>\n        <h2>Marcas</h2>\n        {loading && <Loading /> }\n\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              onClick={e =>\n                handleLink(e, ROUTES_CONSTANTS.BRAND.create())\n              }\n            >\n              Crear\n            </Button>\n          </Col>\n        </Row>\n\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Description</th>\n\t\t\t\t\t\t\t<th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.length > 0 &&\n              items.map((item, i) => (\n                <tr key={item.uid}>\n                  <td>{i + 1}</td>\n                  <td>{item.name}</td>\n                  <td>{item.description}</td>\n                  <td className=\"row-table-actions text-center\">\n                    <ButtonGroup aria-label=\"Basic example\">\n                      <Button\n                        variant=\"success\"\n                        onClick={e =>\n                          handleLink(\n                            e,\n                            ROUTES_CONSTANTS.BRAND.view(item.uid)\n                          )\n                        }\n                      >\n                        View\n                      </Button>\n                      <Button\n                        variant=\"warning\"\n                        onClick={e =>\n                          handleLink(\n                            e,\n                            ROUTES_CONSTANTS.BRAND.edit(item.uid)\n                          )\n                        }\n                      >\n                        Edit\n                      </Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n                        variant=\"danger\"\n                        onClick={e =>\n                          handleLink(\n                            e,\n                            ROUTES_CONSTANTS.BRAND.delete(item.uid)\n                          )\n                        }\n                      >\n                        Delete\n                      </Button>\n                    </ButtonGroup>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nexport default withSetting(BrandManagement);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Col, Container, Button } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\n\nexport default class BrandManagementForm extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    saveEntity: PropTypes.func.isRequired,\n    item: PropTypes.object\n  };\n\n  state = {\n    item: {\n      name: \"\",\n      description: \"\"\n    },\n    wordCount: 0\n  };\n\n  componentDidMount() {\n    const { item } = this.props;\n    if (item) {\n      this.setState({ item });\n    }\n  }\n\n  changeHandler = event => {\n    let targetName = event.target.name;\n    let targetValue = event.target.value;\n    let wordCount = this.state.wordCount;\n\n    if (targetName === \"description\") {\n      let texto = targetValue;\n      let primerBlanco = /^ /;\n      let ultimoBlanco = / $/;\n      let variosBlancos = /[ ]+/g;\n      texto = texto.replace(variosBlancos, \" \");\n      texto = texto.replace(primerBlanco, \"\");\n      texto = texto.replace(ultimoBlanco, \"\");\n      wordCount = texto.split(\" \").length;\n    }\n    this.setState({\n      ...this.state,\n      item: {\n        ...this.state.item,\n        [targetName]: targetValue\n      },\n      wordCount\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // event.target.className = \"needs-validation\";\n    this.props.saveEntity(this.state.item);\n  };\n\n  render() {\n    return (\n      <Container>\n        <h2>{this.props.title}</h2>\n        <Button onClick={e => goBack(e)}>Back</Button>\n        <Form noValidate onSubmit={this.handleSubmit} validated={false}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Nombre</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"name\"\n              value={this.state.item.name}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Descripcion</label>\n            <textarea\n              className=\"form-control\"\n              name=\"description\"\n              value={this.state.item.description}\n              onChange={this.changeHandler}\n            />\n            <small className=\"form-text text-muted\">\n              Palabras: {this.state.wordCount}\n            </small>\n          </div>\n\n          <Button type=\"submit\" variant=\"info\">\n            Save\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport BrandManagementForm from \"./brand-management-form\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass BrandManagementCreate extends Component {\n  saveEntity = item => {\n    const { firebase } = this.props.context;\n\n    // Get a key for a new Post.\n    var uid = firebase.brands().push().key;\n\n    item.createdBy = this.props.context.auth.user.uid;\n\n    firebase.brand(uid).set(item, error => {\n      if (error) {\n        console.log(error);\n      } else {\n        history.push(ROUTES_CONSTANTS.BRAND.index());\n      }\n    });\n  };\n\n  render() {\n    return (\n      <BrandManagementForm title={\"Crear Marca\"} saveEntity={this.saveEntity} />\n    );\n  }\n}\n\nexport default withSetting(BrandManagementCreate);\n","import React, { Component } from \"react\";\nimport { Container, ListGroup, Button } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\nimport Loading from \"../../layouts/loading\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass BrandManagementView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      item: null\n    };\n\n    this.getItem = this.props.context.firebase.brand;\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    let uid = this.props.match.params.id;\n    this.getItem(uid)\n      .once(\"value\")\n      .then(snapshot => {\n        const item = snapshot.val();\n        this.setState({\n          item,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { item, loading } = this.state;\n    return (\n      <Container>\n        <h2>Ver Marca</h2>\n        <Button onClick={e => goBack(e)}>Atras</Button>\n        {loading && <Loading />}\n        <ListGroup>\n          <ListGroup.Item className=\"d-flex justify-content-between\">\n            <span>\n              <strong>Nombre:</strong>\n            </span>\n            {item && item.name}\n          </ListGroup.Item>\n          <ListGroup.Item className=\"d-flex justify-content-between\">\n            <span>\n              <strong>Descripcion:</strong>\n            </span>\n            {item && item.description}\n          </ListGroup.Item>\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\nexport default withSetting(BrandManagementView);\n","import React, { Component } from \"react\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport BrandManagementForm from \"./brand-management-form\";\nimport Loading from \"../../layouts/loading\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass BrandManagementEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      item: null\n    };\n\n    this.getItem = this.props.context.firebase.brand;\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    let uid = this.props.match.params.id;\n    this.getItem(uid)\n      .once(\"value\")\n      .then(snapshot => {\n        const item = snapshot.val();\n        this.setState({\n          item,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  saveEntity = item => {\n\t\tconst { firebase } = this.props.context;\n\t\t\n    let uid = this.props.match.params.id;\n\n    firebase.brand(uid).set(item, error => {\n      if (error) {\n        console.log(error);\n      } else {\n        history.push(ROUTES_CONSTANTS.BRAND.index());\n      }\n    });\n  };\n\n  render() {\n    return this.state.loading ? (\n      <Loading />\n    ) : (\n      <BrandManagementForm\n        title={\"Actualizar marca\"}\n        saveEntity={this.saveEntity}\n        item={this.state.item}\n      />\n    );\n  }\n}\n\nexport default withSetting(BrandManagementEdit);\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport { withSetting } from \"../../../shared/context\";\n\nclass BrandManagementDelete extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    const { firebase } = this.props.context;\n\n    let uid = this.props.match.params.id;\n\n    firebase.brand(uid).remove(error => {\n      if (error) {\n        console.log(error);\n      } else {\n        console.log(\"eliminado correctamente!!!\");\n        history.push(ROUTES_CONSTANTS.BRAND.index());\n      }\n    });\n  };\n  render() {\n    return (\n      <Modal show={true} onHide={e => goBack(e)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Eliminar!!!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Estas seguro que deseas eliminar este elemento?{\" \"}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\n            Cancelar\n          </Button>\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\n            Eliminar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default withSetting(BrandManagementDelete);\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport ErrorBoundaryRoute from \"../../../shared/error/error-boundary-route\";\nimport BrandManagement from \"./brand-management\";\nimport BrandManagementCreate from \"./brand-management-create\";\nimport BrandManagementView from \"./brand-management-view\";\nimport BrandManagementEdit from \"./brand-management-edit\";\nimport BrandManagementDelete from \"./brand-management-delete\";\n\nexport default function BrandRoutes({ match }) {\n  return (\n    <>\n      <Switch>\n        <ErrorBoundaryRoute\n          path={`${match.url}/edit/:id`}\n          component={BrandManagementEdit}\n        />\n        <ErrorBoundaryRoute\n          path={`${match.url}/create`}\n          component={BrandManagementCreate}\n        />\n        <ErrorBoundaryRoute\n          path={`${match.url}/view/:id`}\n          component={BrandManagementView}\n        />\n        <ErrorBoundaryRoute\n          path={`${match.url}`}\n          component={BrandManagement}\n        />\n      </Switch>\n      <ErrorBoundaryRoute\n        path={`${match.url}/delete/:id`}\n        component={BrandManagementDelete}\n      />\n    </>\n  );\n}\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Table,\n  Button,\n  Row,\n  Col,\n  ButtonGroup\n} from \"react-bootstrap\";\nimport { withFirebase } from \"../../../shared/firebase\";\nimport { handleLink } from \"../../../shared/util/link-utils\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport Loading from \"../../layouts/loading\";\n\nclass ProductManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      items: {}\n    };\n\n    this.getItems = this.props.firebase.products;\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    this.getItems().on(\"value\", snapshot => {\n      const itemsObject = snapshot.val();\n      const itemsList = itemsObject\n        ? Object.keys(itemsObject).map(key => ({\n            ...itemsObject[key],\n            uid: key\n          }))\n        : [];\n      this.setState({\n        items: itemsList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.getItems().off();\n  }\n\n  render() {\n    const { items, loading } = this.state;\n    return (\n      <Container>\n        <h2>Productos</h2>\n        {loading && <Loading />}\n\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              onClick={e => handleLink(e, ROUTES_CONSTANTS.PRODUCT.create())}\n            >\n              Crear\n            </Button>\n          </Col>\n        </Row>\n\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Codigo</th>\n              <th>Nombre</th>\n              <th>Descripcion corta</th>\n              <th>Descripcion Larga</th>\n              <th>Linea</th>\n              <th>Marca</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.length > 0 &&\n              items.map((item, i) => (\n                <tr key={item.uid}>\n                  <td>{i + 1}</td>\n                  <td>{item.code}</td>\n                  <td>{item.name}</td>\n                  <td>{item.shortDescription}</td>\n                  <td>{item.largeDescription}</td>\n                  <td>{item.productLineName}</td>\n                  <td>{item.brandName}</td>\n                  <td className=\"row-table-actions text-center\">\n                    <ButtonGroup aria-label=\"Basic example\">\n                      <Button\n                        variant=\"success\"\n                        onClick={e =>\n                          handleLink(e, ROUTES_CONSTANTS.PRODUCT.view(item.uid))\n                        }\n                      >\n                        View\n                      </Button>\n                      <Button\n                        variant=\"warning\"\n                        onClick={e =>\n                          handleLink(e, ROUTES_CONSTANTS.PRODUCT.edit(item.uid))\n                        }\n                      >\n                        Edit\n                      </Button>\n                      <Button\n                        variant=\"danger\"\n                        onClick={e =>\n                          handleLink(\n                            e,\n                            ROUTES_CONSTANTS.PRODUCT.delete(item.uid)\n                          )\n                        }\n                      >\n                        Delete\n                      </Button>\n                    </ButtonGroup>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nexport default withFirebase(ProductManagement);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport CreatableSelect from 'react-select/creatable';\n\nexport default class CreatableWidget extends Component {\n\tstatic propTypes = {\n\t\toptions: PropTypes.array.isRequired,\n\t\thandleChange: PropTypes.func.isRequired,\n\t\tonCreateOption: PropTypes.func.isRequired,\n\t}\n\n\tstate = {\n\t\tisLoading: false,\n\t\toptions: this.props.options,\n\t\t// value: [],\n\t};\n\n\thandleChange = (newValue, actionMeta) => {\n\t\t// this.setState({ value: newValue });\n\t\tthis.props.handleChange( newValue, actionMeta);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<CreatableSelect\n\t\t\t\tisClearable\n\t\t\t\tisMulti={this.props.isMulti}\n\t\t\t\t// isDisabled={isLoading}\n\t\t\t\t// isLoading={isLoading}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tonCreateOption={this.props.onCreateOption}\n\t\t\t\toptions={this.props.options}\n\t\t\t\tvalue={this.props.value && this.props.value.length > 0 ? this.props.value : [] }\n\t\t\t\tclassName='text-dark multi-select-options'\n\t\t/>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Select from 'react-select';\n\nexport default class SelectWidget extends Component {\n\tstatic propTypes = {\n\t\toptions: PropTypes.array.isRequired,\n\t\thandleChange: PropTypes.func.isRequired,\n\t\tvalue: PropTypes.array.isRequired,\n\t}\n\t\n\tstate = {\n\t\tisLoading: false,\n\t\toptions: this.props.options,\n\t\t// value: [],\n\t};\n\n\t// componentDidMount() {\n\t// \tconsole.log(this.props.value);\n\t// }\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn true;\n\t}\n\n\thandleChange = (newValue, actionMeta) => {\n\t\t// this.setState({ value: newValue });\n\t\tthis.props.handleChange( newValue, actionMeta);\n\t};\n\n\trender() {\t\t\n\t\treturn (\n\t\t\t<Select\n\t\t\t\tisClearable\n\t\t\t\tisMulti={this.props.isMulti}\n\t\t\t\t// isDisabled={isLoading}\n\t\t\t\t// isLoading={isLoading}\n\t\t\t\tonChange={this.handleChange}\t\t\t\t\n\t\t\t\toptions={this.props.options}\n\t\t\t\tvalue={this.props.value && this.props.value.length > 0 ? this.props.value : [] }\n\t\t\t\tclassName='text-dark multi-select-options'\n\t\t\t/>\n\t\t)\n\t}\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CreatableWidget from \"./creatable\";\nimport SelectWidget from \"./select\";\n\nconst createOption = label => ({\n  label,\n  value: null\n});\n\nexport default class AutoComplete extends Component {\n  static propTypes = {\n    options: PropTypes.array.isRequired,\n    selectedOptions: PropTypes.array,\n    defaultLabel: PropTypes.string.isRequired,\n    defaultValue: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    isCreatable: PropTypes.bool\n  };\n\n  state = {\n    isLoading: false,\n    isCreatable: false,\n    options: [],\n    selectedOptions: []\n  };\n\n  componentDidMount() {\n    this.prepareOptions();\n  }\n\n  checkIfSelectedOptionsChange = nextProps => {\n    if (\n      nextProps.selectedOptions &&\n      this.state.selectedOptions.length !== nextProps.selectedOptions.length\n    ) {\n      return true;\n    }\n\n    for (let i = 0; i < nextProps.selectedOptions.length; i++) {\n      const nextSelected = nextProps.selectedOptions[i];\n      let iquals = false;\n      for (let j = 0; j < this.state.selectedOptions.length; j++) {\n        const stateSelected = this.state.selectedOptions[j];\n        if (nextSelected[this.props.defaultValue] == stateSelected.value) {\n          iquals = true;\n          break;\n        }\n      }\n      if (!iquals) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      (nextProps.options &&\n        this.state.options.length !== nextProps.options.length) ||\n      this.checkIfSelectedOptionsChange(nextProps)\n    ) {\n      this.prepareOptions();\n      return true;\n    }\n    return false;\n  }\n\n  prepareOptions = () => {\n    // this.setState({\n    //     ...this.state,\n    //     isLoading: true,\n    // })\n\n    // console.log(this.props.selectedOptions);\n\n    let options = this.props.options.map(option => {\n      return {\n        label: option[this.props.defaultLabel],\n        value: option[this.props.defaultValue]\n      };\n    });\n\n    let selectedOptions = this.props.selectedOptions.map(selectedOption => {\n      return {\n        label: selectedOption[this.props.defaultLabel],\n        value: selectedOption[this.props.defaultValue]\n      };\n    });\n\n    // console.log(\"this.props.selectedOptions\");\n    // console.log(this.props.selectedOptions);\n\n    this.setState({\n      ...this.state,\n      // isLoading: false,\n      isCreatable: this.props.isCreatable ? true : false,\n      options,\n      selectedOptions\n    });\n  };\n\n  handleChange = (newValue, actionMeta) => {\n    this.props.handleChange(newValue);\n  };\n\n  handleCreate = inputValue => {\n    this.props.handleCreate(inputValue);\n  };\n\n  render() {\n    const { options, selectedOptions } = this.state;\n    return this.props.isCreatable ? (\n      <CreatableWidget\n        isClearable\n        isMulti={this.props.isMulti}\n        handleChange={this.handleChange}\n        onCreateOption={this.handleCreate}\n        options={options}\n        className=\"text-dark multi-select-options\"\n        value={\n          selectedOptions && selectedOptions.length > 0 ? selectedOptions : []\n        }\n      />\n    ) : (\n      <SelectWidget\n        isClearable\n        isMulti={this.props.isMulti}\n        handleChange={this.handleChange}\n        options={options}\n        className=\"text-dark multi-select-options\"\n        value={\n          selectedOptions && selectedOptions.length > 0 ? selectedOptions : []\n        }\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Button, Form, Row, Col } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\nimport AutoComplete from \"../../layouts/autocomplete\";\n\nexport default class ProductManagementForm extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    saveEntity: PropTypes.func.isRequired,\n    item: PropTypes.object\n  };\n\n  state = {\n    loading: false,\n    item: {\n      code: \"\",\n      name: \"\",\n      shortDescription: \"\",\n      largeDescription: \"\",\n      productLineUID: \"\",\n      productLineName: \"\",\n      brandUID: \"\",\n      brandName: \"\"\n    },\n    wordCount: 0\n  };\n\n  componentDidMount() {\n    const { item } = this.props;\n    if (item) {\n      this.setState({ item });\n    }\n  }\n\n  changeHandler = event => {\n    let targetName = event.target.name;\n    let targetValue = event.target.value;\n    let wordCount = this.state.wordCount;\n\n    if (targetName === \"description\") {\n      let texto = targetValue;\n      let primerBlanco = /^ /;\n      let ultimoBlanco = / $/;\n      let variosBlancos = /[ ]+/g;\n      texto = texto.replace(variosBlancos, \" \");\n      texto = texto.replace(primerBlanco, \"\");\n      texto = texto.replace(ultimoBlanco, \"\");\n      wordCount = texto.split(\" \").length;\n    }\n    this.setState({\n      ...this.state,\n      item: {\n        ...this.state.item,\n        [targetName]: targetValue\n      },\n      wordCount\n    });\n  };\n\n  changeProductLineHandler = value => {\n    this.setState({\n      item: {\n        ...this.state.item,\n        productLineUID: value ? value.value : \"\",\n        productLineName: value ? value.label : \"\"\n      }\n    });\n  };\n\n  changeBrandHandler = value => {\n    this.setState({\n      item: {\n        ...this.state.item,\n        brandUID: value ? value.value : \"\",\n        brandName: value ? value.label : \"\"\n      }\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // event.target.className = \"needs-validation\";\n    this.props.saveEntity(this.state.item);\n  };\n\n  render() {\n    const { productLines, brands } = this.props;\n    return (\n      <Container>\n        <h2>{this.props.title}</h2>\n        <Button onClick={e => goBack(e)}>Back</Button>\n        <Form noValidate onSubmit={this.handleSubmit} validated={false}>\n          <Row>\n            <Col md=\"6\">\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Codigo</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"code\"\n                  value={this.state.item.code}\n                  onChange={this.changeHandler}\n                />\n              </div>\n            </Col>\n            <Col md=\"6\">\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Nombre</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={this.state.item.name}\n                  onChange={this.changeHandler}\n                />\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"6\">\n              <div className=\"form-group\">\n                <label htmlFor=\"productLine\">Linea de productos</label>\n                {productLines && productLines.length > 0 && (\n                  <AutoComplete\n                    isCreatable={false}\n                    isMulti={false}\n                    options={productLines}\n                    defaultLabel=\"name\"\n                    defaultValue=\"uid\"\n                    handleChange={this.changeProductLineHandler}\n                    selectedOptions={\n                      this.state.item\n                        ? [\n                            {\n                              uid: this.state.item.productLineUID,\n                              name: this.state.item.productLineName\n                            }\n                          ]\n                        : []\n                    }\n                  />\n                )}\n              </div>\n            </Col>\n            <Col md=\"6\">\n              <div className=\"form-group\">\n                <label htmlFor=\"marca\">Marca</label>\n                <AutoComplete\n                  isCreatable={false}\n                  isMulti={false}\n                  options={brands}\n                  defaultLabel=\"name\"\n                  defaultValue=\"uid\"\n                  handleChange={this.changeBrandHandler}\n                  selectedOptions={\n                    this.state.item\n                      ? [\n                          {\n                            uid: this.state.item.brandUID,\n                            name: this.state.item.brandName\n                          }\n                        ]\n                      : []\n                  }\n                />\n              </div>\n            </Col>\n          </Row>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"shortDescription\">Descripcion corta</label>\n            <textarea\n              className=\"form-control\"\n              name=\"shortDescription\"\n              value={this.state.item.shortDescription}\n              onChange={this.changeHandler}\n            />\n            <small className=\"form-text text-muted\">\n              Palabras: {this.state.wordCount}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Descripcion larga</label>\n            <textarea\n              className=\"form-control\"\n              name=\"largeDescription\"\n              value={this.state.item.largeDescription}\n              onChange={this.changeHandler}\n            />\n            <small className=\"form-text text-muted\">\n              Palabras: {this.state.wordCount}\n            </small>\n          </div>\n\n          <Button type=\"submit\" variant=\"info\">\n            Save\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport ProductManagementForm from \"./product-management-form\";\nimport history from \"../../../config/history\";\nimport { withFirebase } from \"../../../shared/firebase\";\n\nclass ProductManagementCreate extends Component {\n  state = {\n    productLines: [],\n    brands: []\n  };\n\n  saveEntity = item => {\n    const { firebase } = this.props.context;\n\n    // Get a key for a new Post.\n    var uid = firebase.products().push().key;\n\n    firebase.product(uid).set(item, error => {\n      if (error) {\n        console.log(error);\n      } else {\n        history.push(ROUTES_CONSTANTS.PRODUCT.index());\n      }\n    });\n  };\n\n  async componentDidMount() {\n    const productLines = await this.getProductLines();\n    const brands = await this.getBrands();\n\n    this.setState({ productLines, brands });\n  }\n\n  getProductLines = () => {\n    return new Promise((resolve, reject) => {\n      this.props.context.firebase.productLines().on(\n        \"value\",\n        snapshot => {\n          const itemsObject = snapshot.val();\n          const itemsList = itemsObject\n            ? Object.keys(itemsObject).map(key => ({\n                ...itemsObject[key],\n                uid: key\n              }))\n            : [];\n          // console.log(itemsList);\n          resolve(itemsList);\n        },\n        error => {\n          console.log(error);\n          reject(error);\n        }\n      );\n    });\n  };\n\n  getBrands = () => {\n    return new Promise((resolve, reject) => {\n      this.props.context.firebase.brands().on(\n        \"value\",\n        snapshot => {\n          const itemsObject = snapshot.val();\n          const itemsList = itemsObject\n            ? Object.keys(itemsObject).map(key => ({\n                ...itemsObject[key],\n                uid: key\n              }))\n            : [];\n          // console.log(itemsList);\n          resolve(itemsList);\n        },\n        error => {\n          console.log(error);\n          reject(error);\n        }\n      );\n    });\n  };\n\n  render() {\n    return (\n      <ProductManagementForm\n        title={\"Crear Producto\"}\n        saveEntity={this.saveEntity}\n        productLines={this.state.productLines}\n        brands={this.state.brands}\n      />\n    );\n  }\n}\n\nexport default withFirebase(ProductManagementCreate);\n","import React, { Component } from \"react\";\nimport { withFirebase } from \"../../../shared/firebase\";\nimport { Container, Button, ListGroup } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\nimport Loading from \"../../layouts/loading\";\n\nclass ProductManagementView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      item: null\n    };\n\n    this.getItem = this.props.firebase.product;\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    let uid = this.props.match.params.id;\n    this.getItem(uid)\n      .once(\"value\")\n      .then(snapshot => {\n        const item = snapshot.val();\n        this.setState({\n          item,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { item, loading } = this.state;\n    return (\n      <Container>\n        <h2>Ver Producto</h2>\n        <Button onClick={e => goBack(e)}>Atras</Button>\n        {loading && <Loading />}\n        <ListGroup>\n          <ListGroup.Item>\n            <span>\n              <strong>Codigo:</strong>\n            </span>\n            {item && item.code}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <span>\n              <strong>Nombre:</strong>\n            </span>\n            {item && item.name}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <span>\n              <strong>Descripcion corta:</strong>\n            </span>\n            {item && item.shortDescription}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <span>\n              <strong>Descripcion larga:</strong>\n            </span>\n            {item && item.largeDescription}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <span>\n              <strong>Linea de producto:</strong>\n            </span>\n            {item && item.productLineName}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <span>\n              <strong>Marca:</strong>\n            </span>\n            {item && item.brandName}\n          </ListGroup.Item>\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\nexport default withFirebase(ProductManagementView);\n","import React, { Component } from \"react\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport ProductManagementForm from \"./product-management-form\";\nimport { withFirebase } from \"../../../shared/firebase\";\n\nclass ProductManagementEdit extends Component {\n  state = {\n    productLines: [],\n    brands: [],\n    product: null\n  };\n\n  saveEntity = item => {\n    const { firebase } = this.props;\n\n    let uid = this.props.match.params.id;\n\n    firebase.product(uid).set(item, error => {\n      if (error) {\n        console.log(error);\n      } else {\n        history.push(ROUTES_CONSTANTS.PRODUCT.index());\n      }\n    });\n  };\n\n  async componentDidMount() {\n    const product = await this.getProduct();\n    const productLines = await this.getProductLines();\n    const brands = await this.getBrands();\n\n    this.setState({ productLines, brands, product });\n  }\n\n  getProduct = () => {\n    return new Promise((resolve, reject) => {\n      let uid = this.props.match.params.id;\n      this.props.firebase\n        .product(uid)\n        .once(\"value\")\n        .then(snapshot => {\n          const item = snapshot.val();\n          resolve(item);\n        })\n        .catch(error => {\n          console.log(error);\n          reject(error);\n        });\n    });\n  };\n\n  getProductLines = () => {\n    return new Promise((resolve, reject) => {\n      this.props.firebase.productLines().on(\n        \"value\",\n        snapshot => {\n          const itemsObject = snapshot.val();\n          const itemsList = itemsObject\n            ? Object.keys(itemsObject).map(key => ({\n                ...itemsObject[key],\n                uid: key\n              }))\n            : [];\n          // console.log(itemsList);\n          resolve(itemsList);\n        },\n        error => {\n          console.log(error);\n          reject(error);\n        }\n      );\n    });\n  };\n\n  getBrands = () => {\n    return new Promise((resolve, reject) => {\n      this.props.firebase.brands().on(\n        \"value\",\n        snapshot => {\n          const itemsObject = snapshot.val();\n          const itemsList = itemsObject\n            ? Object.keys(itemsObject).map(key => ({\n                ...itemsObject[key],\n                uid: key\n              }))\n            : [];\n          // console.log(itemsList);\n          resolve(itemsList);\n        },\n        error => {\n          console.log(error);\n          reject(error);\n        }\n      );\n    });\n  };\n\n  render() {\n    return (\n      this.state.product && (\n        <ProductManagementForm\n          title={\"Actualizar Producto\"}\n          saveEntity={this.saveEntity}\n          item={this.state.product}\n          productLines={this.state.productLines}\n          brands={this.state.brands}\n        />\n      )\n    );\n  }\n}\n\nexport default withFirebase(ProductManagementEdit);\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { goBack } from \"../../../shared/util/link-utils\";\nimport { withFirebase } from \"../../../shared/firebase\";\nimport history from \"../../../config/history\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\n\nclass ProductManagementDelete extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    const { firebase } = this.props;\n\n    let uid = this.props.match.params.id;\n\n    firebase.product(uid).remove(error => {\n      if (error) {\n        console.log(error);\n      } else {\n        console.log(\"eliminado correctamente!!!\");\n        history.push(ROUTES_CONSTANTS.PRODUCT.index());\n      }\n    });\n  };\n  render() {\n    return (\n      <Modal show={true} onHide={e => goBack(e)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Eliminar!!!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Estas seguro que deseas eliminar este elemento?{\" \"}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\n            Cancelar\n          </Button>\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\n            Eliminar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default withFirebase(ProductManagementDelete);\n","import React from 'react'\nimport { Switch  } from 'react-router-dom';\nimport ErrorBoundaryRoute from '../../../shared/error/error-boundary-route';\nimport ProductManagement from './product-management';\nimport ProductManagementCreate from \"./product-management-create\";\nimport ProductManagementView from \"./product-management-view\";\nimport ProductManagementEdit from \"./product-management-edit\";\nimport ProductManagementDelete from \"./product-management-delete\";\n\nexport default function ProductRoutes({match}) {\n\treturn (\n\t\t<>\n\t\t\t<Switch>\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/edit/:id`} component={ProductManagementEdit} />\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/create`} component={ProductManagementCreate} />\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/view/:id`} component={ProductManagementView} />\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}`} component={ProductManagement} />\n\t\t\t</Switch>\n\t\t\t<ErrorBoundaryRoute path={`${match.url}/delete/:id`} component={ProductManagementDelete} />\n\t\t</>\n\t)\n}\n","import React, { Component } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport ErrorBoundaryRoute from \"./shared/error/error-boundary-route\";\nimport { ROUTES_CONSTANTS } from \"./config/routes-constants\";\n\nimport Home from \"./modules/general/home\";\nimport PageNotFound from \"./shared/error/page-not-found\";\nimport LoginPage from \"./modules/general/login\";\nimport CompanyRoutes from \"./modules/admin/company-management\";\nimport ProductLinesRoutes from \"./modules/admin/product-line-management\";\nimport BrandRoutes from \"./modules/admin/brand-management\";\nimport ProductRoutes from \"./modules/admin/product\";\n\nclass Routes extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <ErrorBoundaryRoute\n            path={ROUTES_CONSTANTS.HOME}\n            exact\n            component={Home}\n          />\n          <ErrorBoundaryRoute\n            path={ROUTES_CONSTANTS.AUTH.LOGIN}\n            component={LoginPage}\n          />\n\n          <ErrorBoundaryRoute\n            path={ROUTES_CONSTANTS.COMPANY.index()}\n            component={CompanyRoutes}\n          />\n\n          <ErrorBoundaryRoute\n            path={ROUTES_CONSTANTS.PRODUCT_LINE.index()}\n            component={ProductLinesRoutes}\n          />\n\n          <ErrorBoundaryRoute\n            path={ROUTES_CONSTANTS.BRAND.index()}\n            component={BrandRoutes}\n          />\n\n          <ErrorBoundaryRoute\n            path={ROUTES_CONSTANTS.PRODUCT.index()}\n            component={ProductRoutes}\n          />\n\n          <ErrorBoundaryRoute component={PageNotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\nimport { handleLink } from \"../../../shared/util/link-utils\";\n\nexport default class Header extends Component {\n  render() {\n    const { isAuthenticated } = this.props;\n    console.log(isAuthenticated)\n    if (!isAuthenticated) return null;\n    const homeRoute = ROUTES_CONSTANTS.HOME;\n    const companiesRoute = ROUTES_CONSTANTS.COMPANY.index();\n    const productLinesRoute = ROUTES_CONSTANTS.PRODUCT_LINE.index();\n    const brandRoute = ROUTES_CONSTANTS.BRAND.index();\n    const productRoute = ROUTES_CONSTANTS.PRODUCT.index();\n    return (\n      <Navbar bg=\"dark\" fixed=\"top\">\n        <Navbar.Brand href={homeRoute} onClick={e => handleLink(e, homeRoute)}>\n          Writter App Management\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href={homeRoute} onClick={e => handleLink(e, homeRoute)}>\n              Home\n            </Nav.Link>\n            <Nav.Link\n              href={companiesRoute}\n              onClick={e => handleLink(e, companiesRoute)}\n            >\n              Companias\n            </Nav.Link>\n            <Nav.Link\n              href={productLinesRoute}\n              onClick={e => handleLink(e, productLinesRoute)}\n            >\n              Linea de productos\n            </Nav.Link>\n            <Nav.Link\n              href={brandRoute}\n              onClick={e => handleLink(e, brandRoute)}\n            >\n              Marca\n            </Nav.Link>\n            <Nav.Link\n              href={productRoute}\n              onClick={e => handleLink(e, productRoute)}\n            >\n              Productos\n            </Nav.Link>\n            <Nav.Link //Poner a la derecha\n              href=\"/logout\"\n              onClick={e => {\n                e.preventDefault();\n                this.props.logout();\n              }}\n            >\n              Cerrar session\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Router } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport history from \"./config/history\";\nimport Routes from \"./routes\";\nimport Header from \"./modules/layouts/header\";\nimport { ROUTES_CONSTANTS } from \"./config/routes-constants\";\nimport { withSetting } from \"./shared/context\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount = () => {\n    this.props.context.firebase.auth.onAuthStateChanged(user => {\n      this.props.context.auth.setUser(user);\n      this.forceUpdate();\n    });\n  };\n\n  logoutWithGoogle = () => {\n    this.props.context.firebase\n      .logout()\n      .then(() => {\n        this.props.context.auth.setUser(null);\n        history.push(ROUTES_CONSTANTS.AUTH.LOGIN)\n      });\n  };\n\n  render() {\n    const { isAuthenticated} = this.props.context.auth\n    console.log(this.props.context);\n    return (\n      <Container fluid style={{ paddingTop: \"60px\" }}>\n        <Router history={history}>\n          <>\n            <Header\n              isAuthenticated={isAuthenticated}\n              logout={this.logoutWithGoogle}\n            />\n            <Routes\n              isAuthenticated={isAuthenticated}\n            />\n          </>\n        </Router>\n      </Container>\n    );\n  }\n}\n\nexport default withSetting(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport SettingProvider from \"./shared/context\";\n\n// import Firebase, { FirebaseContext } from \"./shared/firebase\";\n\n\nReactDOM.render(\n  <SettingProvider>\n    <App />\n  </SettingProvider>,\n\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}